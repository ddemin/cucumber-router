apply plugin: 'java'
apply plugin: 'jacoco'

group theGroup
version theVersion
sourceCompatibility = theSourceCompatibility

apply from: 'gradle/script/nebula.gradle'
apply from: 'gradle/script/csa.gradle'
apply from: 'gradle/script/publishing.gradle'
apply from: 'gradle/script/report.gradle'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.github.ddemin:test-automation-utils:0.1.1'
    compile 'io.cucumber:gherkin:5.0.0'
    compile 'io.cucumber:cucumber-core:2.1.0'
    compile 'org.hamcrest:hamcrest-core:1.3'
    compile 'org.hamcrest:hamcrest-library:1.3'
    compile 'org.testng:testng:6.10'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile("com.google.guava:guava:21.0") { force = true }
    compile 'io.cucumber:cucumber-jvm:2.1.0'
    compile 'io.cucumber:cucumber-testng:2.1.0'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'org.awaitility:awaitility:2.0.0'
    compileClasspath 'org.projectlombok:lombok:1.16.12'
    compileClasspath 'com.google.code.findbugs:findbugs:3.0.1'

    testCompile 'io.cucumber:cucumber-java:2.1.0'
    testCompile 'io.qameta.allure:allure-cucumber2-jvm:2.0-BETA21'
    testCompile 'ch.qos.logback:logback-classic:1.1.8'
    testCompile 'ch.qos.logback:logback-core:1.1.8'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompileClasspath 'org.projectlombok:lombok:1.16.12'
    testCompileClasspath 'com.google.code.findbugs:findbugs:3.0.1'
}

jar.dependsOn ':check'

check.dependsOn ':pmdMain', ':findbugsMain', ':checkstyleMain', ':jacocoTestCoverageVerification', ':jacocoTestReport'

test {
    systemProperties System.getProperties()
    useTestNG() {
        setUseDefaultListeners(true)
        setParallel("classes")
        includeGroups("unit")
        setThreadCount(4)
    }
}

task demo(type: Test) {
    systemProperties System.getProperties()
    useTestNG() {
        setUseDefaultListeners(false)
        setParallel("instances")
        includeGroups("demo")
        setThreadCount(3)
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.3
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}